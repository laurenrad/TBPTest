# MIT License

# Copyright (c) 2023 Lauren Rad

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Application: TBPTest
# File: !RunImage
# Description: The primary entry point for this application, containing its app instance.

import riscos_toolbox as toolbox
from riscos_toolbox.objects.quit import Quit
from riscos_toolbox.application import Application
from riscos_toolbox.events import toolbox_handler, wimp_handler, message_handler
import riscos_toolbox.user_messages as Messages

import tbptest.gadgets.writablewin as writablewin
import tbptest.gadgets.numrangewin as numrangewin
import tbptest.gadgets.buttonwin as buttonwin
import tbptest.gadgets.actionbuttonwin as actionbuttonwin
import tbptest.gadgets.displayfieldwin as displayfieldwin
import tbptest.gadgets.draggablewin as draggablewin
import tbptest.gadgets.optionbuttonwin as optionbuttonwin
import tbptest.gadgets.sliderwin as sliderwin
import tbptest.gadgets.radiobuttonwin as radiobuttonwin
import tbptest.gadgets.adjusterwin as adjusterwin
import tbptest.gadgets.stringsetwin as stringsetwin
import tbptest.gadgets.popupwin as popupwin
import tbptest.gadgets.scrolllistwin as scrolllistwin
import tbptest.gadgets.textareawin as textareawin
import tbptest.mainwin as mainwin
import tbptest.objects.colourwin
import tbptest.objects.fontwin
import tbptest.objects.iconbarwin
import tbptest.objects.menuwin
import tbptest.objects.proginfowin
import tbptest.objects.fileinfowin
import tbptest.objects.quitwin
import tbptest.objects.scalewin
import tbptest.objects.winwin

# Constants
EV_MENU_QUIT = 0x100 # Event for quitting from the iconbar menu
	
class TBPTest(Application):
	def __init__(self):
		super().__init__('<TBPTest$Dir>')
		
	@toolbox_handler(Quit.Quit)
	@toolbox_handler(EV_MENU_QUIT)
	def quit(self, event, id_block, poll_block):
		toolbox.quit()
		
	
	
if __name__ == "__main__":
	app = TBPTest()	
	app.run()
	